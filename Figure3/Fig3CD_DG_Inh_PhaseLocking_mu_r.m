%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%create background subtracted data with bad channel being taken care of(just skip the bad ch for background noise calc, but they still exsit in final output)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%animals = {'TS110-3' 'TS112-1' 'TS114-2' 'TS113-3' 'TS113-2' 'TS115-1' 'TS116-1' 'TS117-1' 'TS86-2' 'TS89-2' 'TS91-2' 'TS90-2'}; 
animals = {'TS91-2'}; 
for anim = 1:length(animals)
    animal=animals{anim};
    probetype='ECHIP512';
    createBackgroundFile_badch_out_SF(animal, probetype);   %no parallel ~5 hours for 216GB raw 512ch
end

%referencing file:
%createBackgroundFile(animal, probetype); 


%% SPIKE SORTING AND SINGLE UNIT PROCESS SESSION (kilosort)
% PART 1.1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%kilosort stuff
%generated by Alie, edit by SF
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%animals = {'TS110-0' 'TS114-3' 'TS113-1' 'TS117-4' 'TS118-2' 'TS86-1' 'TS89-3' 'TS91-1'};

animal = 'TS86-2';
probelayout='ECHIP512';
shanks = [1];
timefull = 0; %set to 1 when want to process the7680	220807680	22080 entire recording


t0 = 4320;  %in sec. you can leave as 0 if timefull = 1, if you are using timefull = 0, the minimum for t0 is 1!!! 
t1 = 16440;  %in sec. you can leave as 0 if timefull = 1
KilosortFormat_SF(probelayout,animal,shanks,timefull, t0, t1) %don't takeout bad ch, deal with bad ch at kilosort step)

%%
% PART 1.2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%record time range when generating binary file in the previous step
%edit get_kilo_inputtime_SF(animal); %edit this file when add new animal binary files
% animals = {'TS112-0' 'TS114-0' 'TS114-1'  'TS111-1' 'TS111-2' 'TS115-2' 'TS116-3' ...
%     'TS116-0' 'TS116-2' 'TS117-0' 'TS118-4'  'TS118-0' 'TS118-3' 'TS88-3' 'TS90-0' ...
%     'TS89-1' 'TS110-0' 'TS114-3' 'TS113-1' 'TS117-4' 'TS118-2' 'TS86-1' 'TS89-3' ...
%     'TS91-1' 'TS110-3' 'TS112-1' 'TS114-2' 'TS113-3' 'TS113-2' 'TS115-1' 'TS116-1' ...
%     'TS117-1' 'TS86-2' 'TS89-2' 'TS91-2' 'TS90-2'}; %list of all animals

%recorded all 3 batches, 36 animals

animals = { 'TS110-0'}; 
for anim = 1:length(animals)
    animal=animals{anim};
    get_kilo_inputtime_SF(animal) %save kilot0 and kilot1 as start and end process time through kilosort
end

%% below is a script to check drift
% require files from kilosort and phy2 to run this session. Set dir to folder contains kilo output
%PlotdriftCorrectionMap.m

%% 
% PART 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Deal with Phy output, organize phy infomation and save as cell and unit mat files which will be pass in later analysis
%generate by Alie, edit by susie
%run this after manually cleaned clusters in phy
%script path: Y:\Susie\2020\Summer_Ephys_ALL\kilosort\Scripts and L:\Susie\EphysAnalysisScripts\Kilosort_Scripts
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear all
animal = 'TS89-3';
shanks = [2];
for sk = 1:length(shanks)
    shank = shanks(sk);
    dir = ['Y:\Susie\2020\Summer_Ephys_ALL\kilosort\' animal '\shank' num2str(shank) '\'];
    PhyOutput_SF(dir, animal, shank); %susie edited 9/26/22 to adapt the current need on data organizing
end



%%
% PART3.1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%process single unit spikes in HPC
%calculate phase locking, firing rate, waveforms, autocooralation, etc.
% PART3.1.1 HPC spike processing
clear all

animals = {'TS112-0' 'TS114-0' 'TS114-1'  'TS111-1' 'TS111-2' 'TS115-2' 'TS116-3' ...
    'TS116-0' 'TS116-2' 'TS117-0' 'TS118-4'  'TS118-0' 'TS118-3' 'TS88-3' 'TS90-0' ...
    'TS89-1' 'TS110-0' 'TS114-3' 'TS117-4' 'TS118-2' 'TS86-1' 'TS89-3' ...
    'TS91-1' 'TS110-3' 'TS112-1' 'TS114-2' 'TS113-3' 'TS113-2' 'TS115-1' 'TS116-1' ...
    'TS117-1' 'TS86-2' 'TS89-2' 'TS91-2' 'TS90-2' }; %list of all animals for HPC spike process (took out 113-1 since no master shank at this moment) took out 90-2 bc no track2

animals = { 'TS89-3' }; 

for a=1:length(animals)    
    animal = animals{a};
    %[CA1DGshank, CA3shank, MECshank, LECshank]=getCA1DGCA3ECshank_SF(animal);
    %shank = CA1DGshank;
    track = '1';
    shanks = [2];
    for sk = 1:length(shanks)
        shank = shanks(sk);
        TSprocessSpikes_HPC_runtime_noseiz_SF(animal, shank, track) %take only runtime and non-seiz time, use this for HPC units processing
    end
end
 
%%
clear all
animals = { 'TS117-1' }; 

for a=1:length(animals)    
    animal = animals{a};
    %[CA1DGshank, CA3shank, MECshank, LECshank]=getCA1DGCA3ECshank_SF(animal);
    %shank = CA1DGshank;
    track = '1';
    shanks = [2];
    for sk = 1:length(shanks)
        shank = shanks(sk);
        TSprocessSpikes_HPC_runtime_noseiz_SFCopy(animal, shank, track) %take only runtime and non-seiz time, use this for HPC units processing
    end
end



%% PART3.2 PLOT PHASE LOCKING
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%organize single unit spikes 
%for clustering and plotting phase locking (circ and bar plot in the same script)
HIPP_SpikeProcessing_SF_combined %plot all unit all animal combined for theta phaselocking


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% below are organize in prism
HIPP_nestedstats_prismoutput_SF % to organize r data into prism format
HIPP_mu_prismoutput_SF % to extract csv data to input in prism


 