%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This script is to extract firing properties for MEC3 subcluasters
% waveform abc (whole track data)
% burst index (fam track)
% CSI (fam track)
% ISI (fam track)
% auto coor (fam tracj)

% note that the cell numbers in each cluster is documentaed speratly in an
% notepad - L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing
% susie 4/5/24
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

animals = { 'TS112-0' 'TS114-0' 'TS114-1'  'TS111-1' 'TS111-2' 'TS115-2' 'TS116-3' ...
    'TS116-0' 'TS116-2' 'TS117-0' 'TS118-4'  'TS118-0' 'TS118-3' 'TS88-3' 'TS90-0' ...
    'TS89-1' 'TS114-3' 'TS113-1' 'TS118-2' 'TS86-1' 'TS89-3' ...
    'TS91-1' 'TS110-3' 'TS114-2' 'TS115-1' 'TS116-1' ...
    'TS117-1' 'TS86-2' 'TS89-2' 'TS91-2' 'TS90-2'}; %list of all animals for susie summer ephys experiment
%112-1 taken out since no master MEC; 113-2 out no master MEC
%110-0 117-4 113-3 seizures for control, taking out
    
    track= 1;
    asym=[];
    c=[];
    a = [];
    b = [];
    meanAC=[];
    burst=[];
    mISI=[];
    pval2MEC=[];
    r2MEC=[];
    mu2MEC=[];
    
    CSI = [];
    auto_corr = {};
    
    animal_ind = {};
    group_ind = {};
    
    
    %cell regions
    M1=[]; %MEC1
    M2=[];
    M3=[];
    
    uind=0;  %master unit index
    
    for anim=1:length(animals)  %loop through all animals and get info about each cluster
        animal=animals{anim};
        [CA1DGshank, CA3shank, MECshank, LECshank]=getCA1DGCA3ECshankFULL_SF(animal);
        for shank=[MECshank]  %for now I only have 1 shank for each animal, I will edit getshank function if later want to add more single units data from more shanks
    
            [ch]=getchannels(animal,shank);  % get channels
            group = ch.group;
            %load info about units generated by TSprocessSpikes_Lruntime_SF
            load(['Y:\Susie\2020\Summer_Ephys_ALL\kilosort\' animal '\shank' num2str(shank) '_processedunits_run_track' num2str(track) '.mat']); %units
            load(['Y:\Susie\2020\Summer_Ephys_ALL\kilosort\' animal '\shank' num2str(shank) '_processedunitswholetrack.mat']); %unitswholetrack, use this for cell type classification
    
            %include LEC version
            if ~isempty(ch.EC12) && ~isempty (ch.EC11) %find units in MEC1
                M1units=find(units.correctclusterch>=ch.EC12 & units.correctclusterch<ch.EC11); 
                M1=[M1 M1units+uind];
            end
        
            if ~isempty(ch.EC22) && ~isempty (ch.EC21) %find units in MEC2
                M2units=find(units.correctclusterch>=ch.EC22 & units.correctclusterch<ch.EC21); 
                M2=[M2 M2units+uind];
            end
            
            if ~isempty(ch.EC32) && ~isempty (ch.EC31) %find units in MEC3
                M3units=find(units.correctclusterch>=ch.EC32 & units.correctclusterch<ch.EC31); 
                M3=[M3 M3units+uind];
            end
                     
            %put spike attributes into master array
            for u=1:length(units.waveforms)  %getting all the important info about each unit from file we loaded in earlier 
                uind=uind+1;
                animal_ind{uind} = animal;  %added this so I can know which animal each cluster belongs to for plotting later
                group_ind{uind} = group;
    
                if ~isempty(units.spikes{u}) 
                    numspikes(uind)=units.numspikes(u);
                    refravio(uind)=units.refravio(u);
    
                    r2MEC(uind)=units.MECIIthetaPL{u}.r;
                    mu2MEC(uind)=units.MECIIthetaPL{u}.mu;
                    pval2MEC(uind) = units.MECIIthetaPL{u}.pval;
    
                    burst(uind)=units.burst(u);
                    mISI(uind)=units.mISI(u);
                    auto_corr(uind)=units.auto(u);
                    CSI(uind)=units.CSI(u);
       
                    c(uind)=unitswholetrack.wavesc(u);
                    a(uind)=unitswholetrack.wavesa(u);
                    b(uind)=unitswholetrack.wavesb(u);
                    asym(uind)=unitswholetrack.wavesasym(u); 
                    FRmean(uind)=unitswholetrack.FRmean(u); %method 1: calculate the total time that each cluster show decent firing above meanFR. then devided by this time
                    meanAC(uind)=unitswholetrack.meanAC(u);
                    CSI(uind)=unitswholetrack.CSI(u);

                    %%%%%%%% calc new burst %%%%%%%
                    autocorr_HIST = hist(cell2mat(auto_corr(uind)),250);
                    burstNEW(uind) = sum(autocorr_HIST(2:5))/sum(autocorr_HIST(200:250)); %spk count in first 5ms / spk count between 150-250ms
                    clear autocorr_HIST
    
                elseif isempty(units.spikes{u})
                    disp(['empty cluster' num2str(u) 'in animal ' animal])
                end
            end
        end %end each shank
    end %end each animal
    
    
    % to identify the unqualified units
    unqualifylist = [];
    for u=1:length(c)
        if numspikes(u) < 200 || refravio(u) > 0.6 || c(u) < 0.1
            unqualifylist = [u unqualifylist];
        end
    end
    %to take out from M1 M2 M3 unit list
    M1_qua_ind=~ismember(M1,unqualifylist);  %set unqualified as 0, qualified as 1
    M2_qua_ind=~ismember(M2,unqualifylist);  %set unqualified as 0, qualified as 1
    M3_qua_ind=~ismember(M3,unqualifylist);  %set unqualified as 0, qualified as 1
    M1 = M1(M1_qua_ind(:) == 1);
    M2 = M2(M2_qua_ind(:) == 1);
    M3 = M3(M3_qua_ind(:) == 1);
    
    %% CLUSTER!
    % **********use this for EC***********
    %below is hardset rule base on previous kmean explring
    x=[ c' ]; %options: %meanAC' asym2' meanAC'  mISI' c2' mFR'  %only c works best for MEC   
    exc = find(x>=0.4);
    inh = find(x<0.4);

genotype_ind = zeros(length(group_ind), 1);  %make logical index for genotype
for i=1:length(genotype_ind)
    if group_ind{i} == '3wc'
       genotype_ind(i) = 1;
    elseif group_ind{i} == '3wp'
        genotype_ind(i) = 2;
    elseif group_ind{i} == '8wc'
        genotype_ind(i) = 3;
    elseif group_ind{i} == '8wp'
        genotype_ind(i) = 4;
    end
end

g_3wccells = find(genotype_ind == 1);  %find indices of all 3wc cells
g_3wpcells=find(genotype_ind == 2);     %find indices of all 3wp cells 
g_8wccells=find(genotype_ind == 3);     %find indices of all 8wc cells 
g_8wpcells=find(genotype_ind == 4);     %find indices of all 8wp cells 
g_ccells = find(genotype_ind == 1 | genotype_ind == 3); %find all control cells

eM1=intersect(exc,M1);  
iM1=intersect(inh,M1); 
eM2=intersect(exc,M2);  
iM2=intersect(inh,M2); 
eM3=intersect(exc,M3); 
iM3=intersect(inh,M3); 


eM2_3wc = intersect(g_3wccells, eM2);
eM2_3wp = intersect(g_3wpcells, eM2);
eM2_8wc = intersect(g_8wccells, eM2);
eM2_8wp = intersect(g_8wpcells, eM2);
eM2_c = intersect(g_ccells, eM2);

iM2_3wc = intersect(g_3wccells, iM2);
iM2_3wp = intersect(g_3wpcells, iM2);
iM2_8wc = intersect(g_8wccells, iM2);
iM2_8wp = intersect(g_8wpcells, iM2);
iM2_c = intersect(g_ccells, iM2);


eM3_3wc = intersect(g_3wccells, eM3);
eM3_3wp = intersect(g_3wpcells, eM3);
eM3_8wc = intersect(g_8wccells, eM3); 
eM3_8wp = intersect(g_8wpcells, eM3);
eM3_c = intersect(g_ccells, eM3);

iM3_3wc = intersect(g_3wccells, iM3);
iM3_3wp = intersect(g_3wpcells, iM3);
iM3_8wc = intersect(g_8wccells, iM3);
iM3_8wp = intersect(g_8wpcells, iM3);
iM3_c = intersect(g_ccells, iM3);


%%%%%%%%%%%%%%%%
%below is all exc/inh/weird cells for each group
e3wc = intersect(g_3wccells, exc);
e3wp = intersect(g_3wpcells, exc);
e8wc = intersect(g_8wccells, exc);
e8wp = intersect(g_8wpcells, exc);
ec =  intersect(g_ccells, exc);

i3wc = intersect(g_3wccells, inh);
i3wp = intersect(g_3wpcells, inh);
i8wc = intersect(g_8wccells, inh);
i8wp = intersect(g_8wpcells, inh);
ic =  intersect(g_ccells, inh);



% 2 MEC
e_M2mu2MEC_c = mu2MEC(eM2_c);
e_M2mu2MEC_3wp = mu2MEC(eM2_3wp);
e_M2mu2MEC_8wp = mu2MEC(eM2_8wp);

i_M2mu2MEC_c = mu2MEC(iM2_c);
i_M2mu2MEC_3wp = mu2MEC(iM2_3wp);
i_M2mu2MEC_8wp = mu2MEC(iM2_8wp);

e_M3mu2MEC_c = mu2MEC(eM3_c);
e_M3mu2MEC_3wp = mu2MEC(eM3_3wp);
e_M3mu2MEC_8wp = mu2MEC(eM3_8wp);

i_M3mu2MEC_c = mu2MEC(iM3_c);
i_M3mu2MEC_3wp = mu2MEC(iM3_3wp);
i_M3mu2MEC_8wp = mu2MEC(iM3_8wp);


e_M2r2MEC_c = r2MEC(eM2_c);
e_M2r2MEC_3wp = r2MEC(eM2_3wp);
e_M2r2MEC_8wp = r2MEC(eM2_8wp);

i_M2r2MEC_c = r2MEC(iM2_c);
i_M2r2MEC_3wp = r2MEC(iM2_3wp);
i_M2r2MEC_8wp = r2MEC(iM2_8wp);

e_M3r2MEC_c = r2MEC(eM3_c);
e_M3r2MEC_3wp = r2MEC(eM3_3wp);
e_M3r2MEC_8wp = r2MEC(eM3_8wp);

i_M3r2MEC_c = r2MEC(iM3_c);
i_M3r2MEC_3wp = r2MEC(iM3_3wp);
i_M3r2MEC_8wp = r2MEC(iM3_8wp);


%% establish rule for MEC3 cell cluster
% kmean

% control
r_scale_fac = 0.9*pi; %set a scale for kmean to perform non bias
[idx] = MECcluster_SF(r_scale_fac,e_M3r2MEC_c, e_M3mu2MEC_c);

% below is to assign high R and low R
Rval1 = mean(e_M3r2MEC_c(find(idx == 1)));
Rval2 = mean(e_M3r2MEC_c(find(idx == 2)));
if Rval1 > Rval2
    e_M3highRind_c = find(idx == 1); %this is index for r or mu value matrix, not the actual r/mu value
    e_M3lowRind_c = find(idx == 2);
else
    e_M3highRind_c = find(idx == 2);
    e_M3lowRind_c = find(idx == 1);
end

% 3wp
r_scale_fac = 0.9*pi;
[idx] = MECcluster_SF(r_scale_fac,e_M3r2MEC_3wp, e_M3mu2MEC_3wp);


% below is to assign high R and low R
Rval1 = mean(e_M3r2MEC_3wp(find(idx == 1)));
Rval2 = mean(e_M3r2MEC_3wp(find(idx == 2)));
if Rval1 > Rval2
    e_M3highRind_3wp = find(idx == 1);
    e_M3lowRind_3wp = find(idx == 2);
else
    e_M3highRind_3wp = find(idx == 2);
    e_M3lowRind_3wp = find(idx == 1);
end

% 8wp
r_scale_fac = 0.9*pi*1;
[idx] = MECcluster_SF(r_scale_fac,e_M3r2MEC_8wp, e_M3mu2MEC_8wp);

% below is to assign high R and low R
Rval1 = mean(e_M3r2MEC_8wp(find(idx == 1)));
Rval2 = mean(e_M3r2MEC_8wp(find(idx == 2)));
if Rval1 > Rval2
    e_M3highRind_8wp = find(idx == 1);
    e_M3lowRind_8wp = find(idx == 2);
else
    e_M3highRind_8wp = find(idx == 2);
    e_M3lowRind_8wp = find(idx == 1);
end

%% save path
savepath = 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\';
if exist(savepath)==0
    mkdir(savepath);
end

%% build table to save
%title_ls = ["a", "b", "c"]; %, 'burst', 'CSI', 'ISI', 'auto corr']; %order matters!!!
%% waveform
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% asign waveform abc to M3 exc cells
e_M3_wavea_c = a(eM3_c);
e_M3_wavea_3wp = a(eM3_3wp);
e_M3_wavea_8wp = a(eM3_8wp);

e_M3_waveb_c = b(eM3_c);
e_M3_waveb_3wp = b(eM3_3wp);
e_M3_waveb_8wp = b(eM3_8wp);

e_M3_wavec_c = c(eM3_c);
e_M3_wavec_3wp = c(eM3_3wp);
e_M3_wavec_8wp = c(eM3_8wp);

% asign waveform abc to M3 exc high and lowR cells
e_M3_wavea_highR_c = e_M3_wavea_c(e_M3highRind_c);
e_M3_wavea_highR_3wp = e_M3_wavea_3wp(e_M3highRind_3wp);
e_M3_wavea_highR_8wp = e_M3_wavea_8wp(e_M3highRind_8wp);


e_M3_waveb_highR_c = e_M3_waveb_c(e_M3highRind_c);
e_M3_waveb_highR_3wp = e_M3_waveb_3wp(e_M3highRind_3wp);
e_M3_waveb_highR_8wp = e_M3_waveb_8wp(e_M3highRind_8wp);

e_M3_wavec_highR_c = e_M3_wavec_c(e_M3highRind_c);
e_M3_wavec_highR_3wp = e_M3_wavec_3wp(e_M3highRind_3wp);
e_M3_wavec_highR_8wp = e_M3_wavec_8wp(e_M3highRind_8wp);


e_M3_wavea_lowR_c = e_M3_wavea_c(e_M3lowRind_c);
e_M3_wavea_lowR_3wp = e_M3_wavea_3wp(e_M3lowRind_3wp);
e_M3_wavea_lowR_8wp = e_M3_wavea_8wp(e_M3lowRind_8wp);

e_M3_waveb_lowR_c = e_M3_waveb_c(e_M3lowRind_c);
e_M3_waveb_lowR_3wp = e_M3_waveb_3wp(e_M3lowRind_3wp);
e_M3_waveb_lowR_8wp = e_M3_waveb_8wp(e_M3lowRind_8wp);

e_M3_wavec_lowR_c = e_M3_wavec_c(e_M3lowRind_c);
e_M3_wavec_lowR_3wp = e_M3_wavec_3wp(e_M3lowRind_3wp);
e_M3_wavec_lowR_8wp = e_M3_wavec_8wp(e_M3lowRind_8wp);



%% burst index
% asign burst index to M3 exc cells
e_M3_burst_c = burst(eM3_c);
e_M3_burst_3wp = burst(eM3_3wp);
e_M3_burst_8wp = burst(eM3_8wp);

% asign burst index to M3 exc high and lowR cells
e_M3_burst_highR_c = e_M3_burst_c(e_M3highRind_c);
e_M3_burst_highR_3wp = e_M3_burst_3wp(e_M3highRind_3wp);
e_M3_burst_highR_8wp = e_M3_burst_8wp(e_M3highRind_8wp);

e_M3_burst_lowR_c = e_M3_burst_c(e_M3lowRind_c);
e_M3_burst_lowR_3wp = e_M3_burst_3wp(e_M3lowRind_3wp);
e_M3_burst_lowR_8wp = e_M3_burst_8wp(e_M3lowRind_8wp);

%% burst NEW index (using auto corr for calc)
e_M3_burstNEW_c = burstNEW(eM3_c);
e_M3_burstNEW_3wp = burstNEW(eM3_3wp);
e_M3_burstNEW_8wp = burstNEW(eM3_8wp);

% asign burstNEW index to M3 exc high and lowR cells
e_M3_burstNEW_highR_c = e_M3_burstNEW_c(e_M3highRind_c);
e_M3_burstNEW_highR_3wp = e_M3_burstNEW_3wp(e_M3highRind_3wp);
e_M3_burstNEW_highR_8wp = e_M3_burstNEW_8wp(e_M3highRind_8wp);

e_M3_burstNEW_lowR_c = e_M3_burstNEW_c(e_M3lowRind_c);
e_M3_burstNEW_lowR_3wp = e_M3_burstNEW_3wp(e_M3lowRind_3wp);
e_M3_burstNEW_lowR_8wp = e_M3_burstNEW_8wp(e_M3lowRind_8wp);


%% CSI
% asign CSI to M3 exc cells
e_M3_csi_c = CSI(eM3_c);
e_M3_csi_3wp = CSI(eM3_3wp);
e_M3_csi_8wp = CSI(eM3_8wp);

e_M3_csi_highR_c = e_M3_csi_c(e_M3highRind_c);
e_M3_csi_highR_3wp = e_M3_csi_3wp(e_M3highRind_3wp);
e_M3_csi_highR_8wp = e_M3_csi_8wp(e_M3highRind_8wp);

e_M3_csi_lowR_c = e_M3_csi_c(e_M3lowRind_c);
e_M3_csi_lowR_3wp = e_M3_csi_3wp(e_M3lowRind_3wp);
e_M3_csi_lowR_8wp = e_M3_csi_8wp(e_M3lowRind_8wp);

%% ISI
e_M3_isi_c = mISI(eM3_c);
e_M3_isi_3wp = mISI(eM3_3wp);
e_M3_isi_8wp = mISI(eM3_8wp);
e_M3_isi_highR_c = e_M3_isi_c(e_M3highRind_c);
e_M3_isi_highR_3wp = e_M3_isi_3wp(e_M3highRind_3wp);
e_M3_isi_highR_8wp = e_M3_isi_8wp(e_M3highRind_8wp);
e_M3_isi_lowR_c = e_M3_isi_c(e_M3lowRind_c);
e_M3_isi_lowR_3wp = e_M3_isi_3wp(e_M3lowRind_3wp);
e_M3_isi_lowR_8wp = e_M3_isi_8wp(e_M3lowRind_8wp);

%% autocorr
e_M3_auto_corr_c = auto_corr(eM3_c);
e_M3_auto_corr_3wp = auto_corr(eM3_3wp);
e_M3_auto_corr_8wp = auto_corr(eM3_8wp);
e_M3_auto_corr_highR_c = e_M3_auto_corr_c(e_M3highRind_c);
e_M3_auto_corr_highR_3wp = e_M3_auto_corr_3wp(e_M3highRind_3wp);
e_M3_auto_corr_highR_8wp = e_M3_auto_corr_8wp(e_M3highRind_8wp);
e_M3_auto_corr_lowR_c = e_M3_auto_corr_c(e_M3lowRind_c);
e_M3_auto_corr_lowR_3wp = e_M3_auto_corr_3wp(e_M3lowRind_3wp);
e_M3_auto_corr_lowR_8wp = e_M3_auto_corr_8wp(e_M3lowRind_8wp);

% make histogram of ave auto corr per cell group
% high R
% c
e_M3_auto_corr_highR_c_HIST = []; %as a prism output
e_M3_auto_corr_highR_c_list = []; %to concadenate all auto corr value in  this big list, then histo plot
e_M3_auto_corr_highR_c_fulllist = [];
counter = 1;
for i = 1:length(e_M3_auto_corr_highR_c)
    x = e_M3_auto_corr_highR_c(i);
    x = cell2mat(x);
    x_size = length(x);
    e_M3_auto_corr_highR_c_list(counter:counter + x_size -1) = x;
%     y = hist(x, 100);
%     e_M3_auto_corr_highR_c_HIST(i,:) =  y;
    counter = counter + x_size;
    clear x  y ;
end
e_M3_auto_corr_highR_c_full_mirr = -e_M3_auto_corr_highR_c_list;
e_M3_auto_corr_highR_c_fulllist(1:counter-1) = e_M3_auto_corr_highR_c_list;
e_M3_auto_corr_highR_c_fulllist(counter:(counter-1)*2) =  e_M3_auto_corr_highR_c_full_mirr;
hist(e_M3_auto_corr_highR_c_fulllist,500,'g')
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('HighR auto corr c')
title_name = 'HighR auto corr c';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_highR_c_HIST = hist(e_M3_auto_corr_highR_c_fulllist,500);

% 3wp
e_M3_auto_corr_highR_3wp_HIST = []; %as a prism output
e_M3_auto_corr_highR_3wp_list = []; %to concadenate all auto corr value in  this big list, then histo plot
e_M3_auto_corr_highR_3wp_fulllist = [];
counter = 1;
for i = 1:length(e_M3_auto_corr_highR_3wp)
    x = e_M3_auto_corr_highR_3wp(i);
    x = cell2mat(x);
    x_size = length(x);
    e_M3_auto_corr_highR_3wp_list(counter:counter + x_size -1) = x;
    counter = counter + x_size;
    clear x  y ;
end
e_M3_auto_corr_highR_3wp_full_mirr = -e_M3_auto_corr_highR_3wp_list;
e_M3_auto_corr_highR_3wp_fulllist(1:counter-1) = e_M3_auto_corr_highR_3wp_list;
e_M3_auto_corr_highR_3wp_fulllist(counter:(counter-1)*2) =  e_M3_auto_corr_highR_3wp_full_mirr;
hist(e_M3_auto_corr_highR_3wp_fulllist,500,'g')
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('HighR auto corr 3wp')
title_name = 'HighR auto corr 3wp';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_highR_3wp_HIST = hist(e_M3_auto_corr_highR_3wp_fulllist,500);

% 8wp
e_M3_auto_corr_highR_8wp_HIST = []; %as a prism output
e_M3_auto_corr_highR_8wp_list = []; %to concadenate all auto corr value in  this big list, then histo plot
e_M3_auto_corr_highR_8wp_fulllist = [];
counter = 1;
for i = 1:length(e_M3_auto_corr_highR_8wp)
    x = e_M3_auto_corr_highR_8wp(i);
    x = cell2mat(x);
    x_size = length(x);
    e_M3_auto_corr_highR_8wp_list(counter:counter + x_size -1) = x;
    counter = counter + x_size;
    clear x  y ;
end
e_M3_auto_corr_highR_8wp_full_mirr = -e_M3_auto_corr_highR_8wp_list;
e_M3_auto_corr_highR_8wp_fulllist(1:counter-1) = e_M3_auto_corr_highR_8wp_list;
e_M3_auto_corr_highR_8wp_fulllist(counter:(counter-1)*2) =  e_M3_auto_corr_highR_8wp_full_mirr;
hist(e_M3_auto_corr_highR_8wp_fulllist,500,'g')
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('HighR auto corr 8wp')
title_name = 'HighR auto corr 8wp';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_highR_8wp_HIST = hist(e_M3_auto_corr_highR_8wp_fulllist,500);

% low R
% c
e_M3_auto_corr_lowR_c_HIST = []; %as a prism output
e_M3_auto_corr_lowR_c_list = []; %to concadenate all auto corr value in  this big list, then histo plot
e_M3_auto_corr_lowR_c_fulllist = [];
counter = 1;
for i = 1:length(e_M3_auto_corr_lowR_c)
    x = e_M3_auto_corr_lowR_c(i);
    x = cell2mat(x);
    x_size = length(x);
    e_M3_auto_corr_lowR_c_list(counter:counter + x_size -1) = x;
%     y = hist(x, 100);
%     e_M3_auto_corr_lowR_c_HIST(i,:) =  y;
    counter = counter + x_size;
    clear x  y ;
end
e_M3_auto_corr_lowR_c_full_mirr = -e_M3_auto_corr_lowR_c_list;
e_M3_auto_corr_lowR_c_fulllist(1:counter-1) = e_M3_auto_corr_lowR_c_list;
e_M3_auto_corr_lowR_c_fulllist(counter:(counter-1)*2) =  e_M3_auto_corr_lowR_c_full_mirr;
hist(e_M3_auto_corr_lowR_c_fulllist,500,'g')
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('lowR auto corr c')
title_name = 'lowR auto corr c';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_lowR_c_HIST = hist(e_M3_auto_corr_lowR_c_fulllist,500);

% 3wp
e_M3_auto_corr_lowR_3wp_HIST = []; %as a prism output
e_M3_auto_corr_lowR_3wp_list = []; %to concadenate all auto corr value in  this big list, then histo plot
e_M3_auto_corr_lowR_3wp_fulllist = [];
counter = 1;
for i = 1:length(e_M3_auto_corr_lowR_3wp)
    x = e_M3_auto_corr_lowR_3wp(i);
    x = cell2mat(x);
    x_size = length(x);
    e_M3_auto_corr_lowR_3wp_list(counter:counter + x_size -1) = x;
    counter = counter + x_size;
    clear x  y ;
end
e_M3_auto_corr_lowR_3wp_full_mirr = -e_M3_auto_corr_lowR_3wp_list;
e_M3_auto_corr_lowR_3wp_fulllist(1:counter-1) = e_M3_auto_corr_lowR_3wp_list;
e_M3_auto_corr_lowR_3wp_fulllist(counter:(counter-1)*2) =  e_M3_auto_corr_lowR_3wp_full_mirr;
hist(e_M3_auto_corr_lowR_3wp_fulllist,500,'g')
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('lowR auto corr 3wp')
title_name = 'lowR auto corr 3wp';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_lowR_3wp_HIST = hist(e_M3_auto_corr_lowR_3wp_fulllist,500);

% 8wp
e_M3_auto_corr_lowR_8wp_HIST = []; %as a prism output
e_M3_auto_corr_lowR_8wp_list = []; %to concadenate all auto corr value in  this big list, then histo plot
e_M3_auto_corr_lowR_8wp_fulllist = [];
counter = 1;
for i = 1:length(e_M3_auto_corr_lowR_8wp)
    x = e_M3_auto_corr_lowR_8wp(i);
    x = cell2mat(x);
    x_size = length(x);
    e_M3_auto_corr_lowR_8wp_list(counter:counter + x_size -1) = x;
    counter = counter + x_size;
    clear x  y ;
end
e_M3_auto_corr_lowR_8wp_full_mirr = -e_M3_auto_corr_lowR_8wp_list;
e_M3_auto_corr_lowR_8wp_fulllist(1:counter-1) = e_M3_auto_corr_lowR_8wp_list;
e_M3_auto_corr_lowR_8wp_fulllist(counter:(counter-1)*2) =  e_M3_auto_corr_lowR_8wp_full_mirr;
hist(e_M3_auto_corr_lowR_8wp_fulllist,500,'g')
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('lowR auto corr 8wp')
title_name = 'lowR auto corr 8wp';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_lowR_8wp_HIST = hist(e_M3_auto_corr_lowR_8wp_fulllist,500);

%%%%%%%%%%%%%%%%%%%%
%combine the 3 groups together
e_M3_auto_corr_lowR_ALL_fulllist = [e_M3_auto_corr_lowR_8wp_fulllist, e_M3_auto_corr_lowR_3wp_fulllist, e_M3_auto_corr_lowR_c_fulllist];
hist(e_M3_auto_corr_lowR_ALL_fulllist,500) 
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('lowR auto corr ALL')
title_name = 'lowR auto corr ALL';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_lowR_ALL_HIST = hist(e_M3_auto_corr_lowR_ALL_fulllist,500);

e_M3_auto_corr_highR_ALL_fulllist = [e_M3_auto_corr_highR_8wp_fulllist, e_M3_auto_corr_highR_3wp_fulllist, e_M3_auto_corr_highR_c_fulllist];
hist(e_M3_auto_corr_highR_ALL_fulllist,500) 
h = findobj(gca,'Type','patch');
h.FaceColor = [0.2 0.90 0.20];
title('highR auto corr ALL')
title_name = 'highR auto corr ALL';
saveas(gca, fullfile(savepath, title_name), 'png');
e_M3_auto_corr_highR_ALL_HIST = hist(e_M3_auto_corr_highR_ALL_fulllist,500);
%% write to table
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%
% auto corr
e_M3_clusters_autocorr = table(e_M3_auto_corr_highR_c_HIST', e_M3_auto_corr_highR_3wp_HIST', e_M3_auto_corr_highR_8wp_HIST', e_M3_auto_corr_lowR_c_HIST', e_M3_auto_corr_lowR_3wp_HIST', e_M3_auto_corr_lowR_8wp_HIST', e_M3_auto_corr_highR_ALL_HIST', e_M3_auto_corr_lowR_ALL_HIST');
e_M3_clusters_autocorr.Properties.VariableNames{1} = 'e_M3_auto_corr_highR_c';
e_M3_clusters_autocorr.Properties.VariableNames{2} = 'e_M3_auto_corr_highR_3wp';
e_M3_clusters_autocorr.Properties.VariableNames{3} = 'e_M3_auto_corr_highR_8wp';
e_M3_clusters_autocorr.Properties.VariableNames{4} = 'e_M3_auto_corr_lowR_c';
e_M3_clusters_autocorr.Properties.VariableNames{5} = 'e_M3_auto_corr_lowR_3wp';
e_M3_clusters_autocorr.Properties.VariableNames{6} = 'e_M3_auto_corr_lowR_8wp';
e_M3_clusters_autocorr.Properties.VariableNames{7} = 'e_M3_auto_corr_highR_ALL';
e_M3_clusters_autocorr.Properties.VariableNames{8} = 'e_M3_auto_corr_lowR_ALL';


%%%%%%%%%%%%%%%%%%
% all other firing matrix
% c
e_M3_highR_c = table(e_M3_wavea_highR_c', e_M3_waveb_highR_c', e_M3_wavec_highR_c', e_M3_burst_highR_c', e_M3_csi_highR_c', e_M3_isi_highR_c',  e_M3_burstNEW_highR_c');
e_M3_highR_c.Properties.VariableNames{1} = 'a';
e_M3_highR_c.Properties.VariableNames{2} = 'b';
e_M3_highR_c.Properties.VariableNames{3} = 'c';
e_M3_highR_c.Properties.VariableNames{4} = 'burst';
e_M3_highR_c.Properties.VariableNames{5} = 'CSI';
e_M3_highR_c.Properties.VariableNames{6} = 'ISI';
e_M3_highR_c.Properties.VariableNames{7} = 'burstNEW';



e_M3_lowR_c = table(e_M3_wavea_lowR_c', e_M3_waveb_lowR_c', e_M3_wavec_lowR_c', e_M3_burst_lowR_c', e_M3_csi_lowR_c', e_M3_isi_lowR_c',e_M3_burstNEW_lowR_c');
e_M3_lowR_c.Properties.VariableNames{1} = 'a';
e_M3_lowR_c.Properties.VariableNames{2} = 'b';
e_M3_lowR_c.Properties.VariableNames{3} = 'c';
e_M3_lowR_c.Properties.VariableNames{4} = 'burst';
e_M3_lowR_c.Properties.VariableNames{5} = 'CSI';
e_M3_lowR_c.Properties.VariableNames{6} = 'ISI';
e_M3_lowR_c.Properties.VariableNames{7} = 'burstNEW';

%3wp
e_M3_highR_3wp = table(e_M3_wavea_highR_3wp', e_M3_waveb_highR_3wp', e_M3_wavec_highR_3wp', e_M3_burst_highR_3wp', e_M3_csi_highR_3wp', e_M3_isi_highR_3wp', e_M3_burstNEW_highR_3wp');
e_M3_highR_3wp.Properties.VariableNames{1} = 'a';
e_M3_highR_3wp.Properties.VariableNames{2} = 'b';
e_M3_highR_3wp.Properties.VariableNames{3} = 'c';
e_M3_highR_3wp.Properties.VariableNames{4} = 'burst';
e_M3_highR_3wp.Properties.VariableNames{5} = 'CSI';
e_M3_highR_3wp.Properties.VariableNames{6} = 'ISI';
e_M3_highR_3wp.Properties.VariableNames{7} = 'burstNEW';

e_M3_lowR_3wp = table(e_M3_wavea_lowR_3wp', e_M3_waveb_lowR_3wp', e_M3_wavec_lowR_3wp', e_M3_burst_lowR_3wp', e_M3_csi_lowR_3wp', e_M3_isi_lowR_3wp', e_M3_burstNEW_lowR_3wp');
e_M3_lowR_3wp.Properties.VariableNames{1} = 'a';
e_M3_lowR_3wp.Properties.VariableNames{2} = 'b';
e_M3_lowR_3wp.Properties.VariableNames{3} = 'c';
e_M3_lowR_3wp.Properties.VariableNames{4} = 'burst';
e_M3_lowR_3wp.Properties.VariableNames{5} = 'CSI';
e_M3_lowR_3wp.Properties.VariableNames{6} = 'ISI';
e_M3_lowR_3wp.Properties.VariableNames{7} = 'burstNEW';

% 8wp
e_M3_highR_8wp = table(e_M3_wavea_highR_8wp', e_M3_waveb_highR_8wp', e_M3_wavec_highR_8wp', e_M3_burst_highR_8wp', e_M3_csi_highR_8wp', e_M3_isi_highR_8wp',e_M3_burstNEW_highR_8wp');
e_M3_highR_8wp.Properties.VariableNames{1} = 'a';
e_M3_highR_8wp.Properties.VariableNames{2} = 'b';
e_M3_highR_8wp.Properties.VariableNames{3} = 'c';
e_M3_highR_8wp.Properties.VariableNames{4} = 'burst';
e_M3_highR_8wp.Properties.VariableNames{5} = 'CSI';
e_M3_highR_8wp.Properties.VariableNames{6} = 'ISI';
e_M3_highR_8wp.Properties.VariableNames{7} = 'burstNEW';

e_M3_lowR_8wp = table(e_M3_wavea_lowR_8wp', e_M3_waveb_lowR_8wp', e_M3_wavec_lowR_8wp', e_M3_burst_lowR_8wp', e_M3_csi_lowR_8wp', e_M3_isi_lowR_8wp', e_M3_burstNEW_lowR_8wp');
e_M3_lowR_8wp.Properties.VariableNames{1} = 'a';
e_M3_lowR_8wp.Properties.VariableNames{2} = 'b';
e_M3_lowR_8wp.Properties.VariableNames{3} = 'c';
e_M3_lowR_8wp.Properties.VariableNames{4} = 'burst';
e_M3_lowR_8wp.Properties.VariableNames{5} = 'CSI';
e_M3_lowR_8wp.Properties.VariableNames{6} = 'ISI';
e_M3_lowR_8wp.Properties.VariableNames{7} = 'burstNEW';
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
savepath = 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\';
writetable(e_M3_clusters_autocorr, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_clusters_autocorr.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writetable(e_M3_highR_c, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_highR_c.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writetable(e_M3_highR_3wp, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_highR_3wp.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writetable(e_M3_highR_8wp, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_highR_8wp.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writetable(e_M3_lowR_c, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_lowR_c.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writetable(e_M3_lowR_3wp, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_lowR_3wp.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writetable(e_M3_lowR_8wp, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\singleunit_phaseloc\MECunits\subcluster_firing\e_M3_lowR_8wp.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 


%% clustering plot 
% using b/a, c, ISI in control

%calc a/b
ratio_b2a_lowR_c = e_M3_waveb_lowR_c./e_M3_wavea_lowR_c;
ratio_b2a_highR_c = e_M3_waveb_highR_c./e_M3_wavea_highR_c;

%all cells all animals
figure('Renderer', 'painters', 'Position', [10 10 700 500])
scatter3(ratio_b2a_lowR_c,e_M3_wavec_lowR_c, e_M3_burstNEW_lowR_c, 50,  'MarkerEdgeColor','k',...
       'MarkerFaceColor',[1 .7  0]);
 hold on; scatter3(ratio_b2a_highR_c,e_M3_wavec_highR_c, e_M3_burstNEW_highR_c, 50, 'MarkerEdgeColor','k',...
       'MarkerFaceColor',[.2 .8 .3]);
 %hold on; scatter3(FRmean(weird),CSI(weird),meanAC(weird), 20,'y');
 xlabel('b/a')
 ylabel('c')
 zlabel('Burst Index')
 title('Control Animals')

%all cells all animals
figure('Renderer', 'painters', 'Position', [10 10 700 500])
scatter(e_M3_wavec_lowR_c, e_M3_burstNEW_lowR_c, 50,  'MarkerEdgeColor','k',...
       'MarkerFaceColor',[1 .7  0]);
 hold on; scatter(e_M3_wavec_highR_c, e_M3_burstNEW_highR_c, 50, 'MarkerEdgeColor','k',...
       'MarkerFaceColor',[.2 .8 .3]);
 %hold on; scatter3(FRmean(weird),CSI(weird),meanAC(weird), 20,'y');
 xlabel('c')
 ylabel('Burst Index')
 title('Control Animals')

 %all cells all animals
figure('Renderer', 'painters', 'Position', [10 10 700 500])
scatter(ratio_b2a_lowR_c, e_M3_burstNEW_lowR_c, 50,  'MarkerEdgeColor','k',...
       'MarkerFaceColor',[1 .7  0]);
 hold on; scatter(ratio_b2a_highR_c, e_M3_burstNEW_highR_c, 50, 'MarkerEdgeColor','k',...
       'MarkerFaceColor',[.2 .8 .3]);
 %hold on; scatter3(FRmean(weird),CSI(weird),meanAC(weird), 20,'y');
 xlabel('b/a')
 ylabel('Burst Index')
 title('Control Animals')
% 
% %all cells all animals
% figure('Renderer', 'painters', 'Position', [10 10 700 500])
% scatter3(ratio_b2a_lowR_c,e_M3_wavec_lowR_c, e_M3_isi_lowR_c, 50,  'MarkerEdgeColor','k',...
%        'MarkerFaceColor',[1 .7  0]);
%  hold on; scatter3(ratio_b2a_highR_c,e_M3_wavec_highR_c, e_M3_isi_highR_c, 50, 'MarkerEdgeColor','k',...
%        'MarkerFaceColor',[.2 .8 .3]);
%  %hold on; scatter3(FRmean(weird),CSI(weird),meanAC(weird), 20,'y');
%  xlabel('b/a')
%  ylabel('c')
%  zlabel('ISI')
%  title('Control Animals')
% 
% 
%  %all cells all animals
% figure('Renderer', 'painters', 'Position', [10 10 700 500])
% scatter3(ratio_b2a_lowR_c,e_M3_wavec_lowR_c, e_M3_burst_lowR_c, 50,  'MarkerEdgeColor','k',...
%        'MarkerFaceColor',[1 .7  0]);
%  hold on; scatter3(ratio_b2a_highR_c,e_M3_wavec_highR_c, e_M3_burst_highR_c, 50, 'MarkerEdgeColor','k',...
%        'MarkerFaceColor',[.2 .8 .3]);
%  %hold on; scatter3(FRmean(weird),CSI(weird),meanAC(weird), 20,'y');
%  xlabel('b/a')
%  ylabel('c')
%  zlabel('burst')
%  title('Control Animals')
% 
