%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This script to organize all theta mu and r value into easy to paste prism format
% this is for M2MO subsample analysis and MEC units
% OUTPUT: csv shgeet with r and mu value organized for input to prism

% susie 5/29/24
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
animals = { 'TS112-0' 'TS114-0' 'TS114-1'  'TS111-1' 'TS111-2' 'TS115-2' 'TS116-3' ...
    'TS116-0' 'TS116-2' 'TS117-0' 'TS118-4'  'TS118-0' 'TS118-3' 'TS88-3' 'TS90-0' ...
    'TS89-1' 'TS114-3' 'TS113-1' 'TS118-2' 'TS86-1' 'TS89-3' ...
    'TS91-1' 'TS110-3' 'TS114-2' 'TS115-1' 'TS116-1' ...
    'TS117-1' 'TS86-2' 'TS89-2' 'TS91-2' 'TS90-2'}; %list of all animals for susie summer ephys experiment
%112-1 taken out since no master MEC; 113-2 out no master MEC
%110-0 117-4 113-3 seizures for control, taking out

track= 1;

asym=[];
c=[];
c2=[];
meanAC=[];
r2CA1=[];
pval2CA1=[];
mu2CA1=[];
rad2CA1 = {};

mFR=[];
FRmean = [];
highestFR = [];
CSI = [];
animal_ind = {};
group_ind = {};

%regions
M1=[];
M2=[];
M3=[];

uind=0;  %master unit index
for anim=1:length(animals)  %loop through all animals and get info about each cluster
    animal=animals{anim};
    [CA1DGshank, CA3shank, MECshank, LECshank]=getCA1DGCA3ECshankFULL_SF(animal);
    for shank=[MECshank]  
        [ch]=getchannels(animal,shank);  % get channels
        group = ch.group;
        %load info about units generated by TSprocessSpikes_Lruntime_SF
         load(['Y:\Susie\2020\Summer_Ephys_ALL\kilosort\' animal '\shank' num2str(shank) '_processedunits_run_track' num2str(track) '.mat']); %units
         units_og = units;
         clear units
        load(['Y:\Susie\2020\Summer_Ephys_ALL\kilosort\' animal '\shank' num2str(shank) 'M32CA1_PL_whenM2MOcohalign_running1sec_2sec-consec.mat']); %units
        load(['Y:\Susie\2020\Summer_Ephys_ALL\kilosort\' animal '\shank' num2str(shank) '_processedunitswholetrack.mat']); %unitswholetrack, use this for cell type classification

%include LEC version
   
    
        if ~isempty(ch.EC22) && ~isempty (ch.EC21) %find units in MEC2
            M2units=find(units.correctclusterch>=ch.EC22 & units.correctclusterch<ch.EC21); 
            M2=[M2 M2units+uind];
        end
        
        if ~isempty(ch.EC32) && ~isempty (ch.EC31) %find units in MEC3
            M3units=find(units.correctclusterch>=ch.EC32 & units.correctclusterch<ch.EC31); 
            M3=[M3 M3units+uind];
        end
        %put spike attributes into master array
        for u=1:length(units.refravio)  %getting all the important info about each unit from file we loaded in earlier 
            uind=uind+1;
            animal_ind{uind} = animal;  %added this so I can know which animal each cluster belongs to for plotting later
            group_ind{uind} = group;
            if ~isnan(units.numspikes(u)) && units.numspikes(u)~=0      
                numspikes(uind)=units.numspikes(u);
                refravio(uind)=units.refravio(u);

                r2CA1(uind)=units.CA1thetaPL{u}.r;
                mu2CA1(uind)=units.CA1thetaPL{u}.mu; %the final phase of each cell
                pval2CA1(uind) = units.CA1thetaPL{u}.pval;
                rad2CA1{uind} = units.CA1thetaPL{u}.bins; %spike's rad value at histcounts 20degree bin
                
                % I needed to use units_og data to pul MEC PL since i didn't calc it for subsample
                if ~isempty(units_og.MECIIthetaPL{u})
                    r2MEC(uind)=units_og.MECIIthetaPL{u}.r;
                    mu2MEC(uind)=units_og.MECIIthetaPL{u}.mu; %the final phase of each cell
                    pval2MEC(uind) = units_og.MECIIthetaPL{u}.pval;
                    rad2MEC{uind} = units_og.MECIIthetaPL{u}.bins; %spike's rad value at histcounts 20degree bin
                else
                    r2MEC(uind)=nan;
                    mu2MEC(uind)=nan; %the final phase of each cell
                    pval2MEC(uind) = nan;
                    rad2MEC{uind} = nan; %spike's rad value at histcounts 20degree bin
                end
                CSI(uind)=unitswholetrack.CSI(u);
                meanAC(uind)=unitswholetrack.meanAC(u); %mean of autocorr
                FRmean(uind)=unitswholetrack.FRmean(u); %method 1: calculate the total time that each cluster show decent firing above meanFR. then devided by this time
                asym(uind)=unitswholetrack.wavesasym(u); 
                c(uind)=unitswholetrack.wavesc(u);

            else
                disp(['empty cluster' num2str(u) 'in animal ' animal])
            end
        end
    end %end each shank
end %end each animal

% to identify the unqualified units
unqualifylist = [];
for u=1:length(c)
    if numspikes(u) < 50 || refravio(u) > 0.6 || c(u) < 0.1 || isnan(r2MEC(u)) %changed to 50 since I'mloosing too many cells
        unqualifylist = [u unqualifylist];
    end
end
%to take out from M1 M2 M3 unit list
%M1_qua_ind=~ismember(M1,unqualifylist);  %set unqualified as 0, qualified as 1
M2_qua_ind=~ismember(M2,unqualifylist);  %set unqualified as 0, qualified as 1
M3_qua_ind=~ismember(M3,unqualifylist);  %set unqualified as 0, qualified as 1
%M1 = M1(M1_qua_ind(:) == 1);
M2 = M2(M2_qua_ind(:) == 1);
M3 = M3(M3_qua_ind(:) == 1);

%% CLUSTER!
% **********use this for EC***********
%below is hardset rule base on previous kmean explring
x=[ c' ]; %options: %meanAC' asym2' meanAC'  mISI' c2' mFR'  %only c works best for MEC   
exc = find(x>=0.4);
inh = find(x<0.4);

%%
genotype_ind = zeros(length(group_ind), 1);  %make logical index for genotype
for i=1:length(genotype_ind)
    if group_ind{i} == '3wc'
       genotype_ind(i) = 1;
    elseif group_ind{i} == '3wp'
        genotype_ind(i) = 2;
    elseif group_ind{i} == '8wc'
        genotype_ind(i) = 3;
    elseif group_ind{i} == '8wp'
        genotype_ind(i) = 4;
    end
end

g_3wccells = find(genotype_ind == 1);  %find indices of all 3wc cells
g_3wpcells=find(genotype_ind == 2);     %find indices of all 3wp cells 
g_8wccells=find(genotype_ind == 3);     %find indices of all 8wc cells 
g_8wpcells=find(genotype_ind == 4);     %find indices of all 8wp cells 
g_ccells = find(genotype_ind == 1 | genotype_ind == 3); %find all control cells

eM2=intersect(exc,M2);  
iM2=intersect(inh,M2); 
eM3=intersect(exc,M3); 
iM3=intersect(inh,M3); 


eM2_3wc = intersect(g_3wccells, eM2);
eM2_3wp = intersect(g_3wpcells, eM2);
eM2_8wc = intersect(g_8wccells, eM2);
eM2_8wp = intersect(g_8wpcells, eM2);
eM2_c = intersect(g_ccells, eM2);

iM2_3wc = intersect(g_3wccells, iM2);
iM2_3wp = intersect(g_3wpcells, iM2);
iM2_8wc = intersect(g_8wccells, iM2);
iM2_8wp = intersect(g_8wpcells, iM2);
iM2_c = intersect(g_ccells, iM2);

eM3_3wc = intersect(g_3wccells, eM3);
eM3_3wp = intersect(g_3wpcells, eM3);
eM3_8wc = intersect(g_8wccells, eM3); 
eM3_8wp = intersect(g_8wpcells, eM3);
eM3_c = intersect(g_ccells, eM3);

iM3_3wc = intersect(g_3wccells, iM3);
iM3_3wp = intersect(g_3wpcells, iM3);
iM3_8wc = intersect(g_8wccells, iM3);
iM3_8wp = intersect(g_8wpcells, iM3);
iM3_c = intersect(g_ccells, iM3);


%%%%%%%%%%%%%%%%
%below is all exc/inh/weird cells for each group
e3wc = intersect(g_3wccells, exc);
e3wp = intersect(g_3wpcells, exc);
e8wc = intersect(g_8wccells, exc);
e8wp = intersect(g_8wpcells, exc);
ec =  intersect(g_ccells, exc);

i3wc = intersect(g_3wccells, inh);
i3wp = intersect(g_3wpcells, inh);
i8wc = intersect(g_8wccells, inh);
i8wp = intersect(g_8wpcells, inh);
ic =  intersect(g_ccells, inh);


% 2 CA1
e_M2mu2CA1_c = mu2CA1(eM2_c);
e_M2mu2CA1_3wp = mu2CA1(eM2_3wp);
e_M2mu2CA1_8wp = mu2CA1(eM2_8wp);

i_M2mu2CA1_c = mu2CA1(iM2_c);
i_M2mu2CA1_3wp = mu2CA1(iM2_3wp);
i_M2mu2CA1_8wp = mu2CA1(iM2_8wp);

e_M3mu2CA1_c = mu2CA1(eM3_c);
e_M3mu2CA1_3wp = mu2CA1(eM3_3wp);
e_M3mu2CA1_8wp = mu2CA1(eM3_8wp);

i_M3mu2CA1_c = mu2CA1(iM3_c);
i_M3mu2CA1_3wp = mu2CA1(iM3_3wp);
i_M3mu2CA1_8wp = mu2CA1(iM3_8wp);

% 2 MEC
e_M2mu2MEC_c = mu2MEC(eM2_c);
e_M2mu2MEC_3wp = mu2MEC(eM2_3wp);
e_M2mu2MEC_8wp = mu2MEC(eM2_8wp);

i_M2mu2MEC_c = mu2MEC(iM2_c);
i_M2mu2MEC_3wp = mu2MEC(iM2_3wp);
i_M2mu2MEC_8wp = mu2MEC(iM2_8wp);

e_M3mu2MEC_c = mu2MEC(eM3_c);
e_M3mu2MEC_3wp = mu2MEC(eM3_3wp);
e_M3mu2MEC_8wp = mu2MEC(eM3_8wp);

i_M3mu2MEC_c = mu2MEC(iM3_c);
i_M3mu2MEC_3wp = mu2MEC(iM3_3wp);
i_M3mu2MEC_8wp = mu2MEC(iM3_8wp);


% r value for each cell
% 2 CA1
e_M2r2CA1_c = r2CA1(eM2_c);
e_M2r2CA1_3wp = r2CA1(eM2_3wp);
e_M2r2CA1_8wp = r2CA1(eM2_8wp);

i_M2r2CA1_c = r2CA1(iM2_c);
i_M2r2CA1_3wp = r2CA1(iM2_3wp);
i_M2r2CA1_8wp = r2CA1(iM2_8wp);

e_M3r2CA1_c = r2CA1(eM3_c);
e_M3r2CA1_3wp = r2CA1(eM3_3wp);
e_M3r2CA1_8wp = r2CA1(eM3_8wp);

i_M3r2CA1_c = r2CA1(iM3_c);
i_M3r2CA1_3wp = r2CA1(iM3_3wp);
i_M3r2CA1_8wp = r2CA1(iM3_8wp);

% 2 MEC
e_M2r2MEC_c = r2MEC(eM2_c);
e_M2r2MEC_3wp = r2MEC(eM2_3wp);
e_M2r2MEC_8wp = r2MEC(eM2_8wp);

i_M2r2MEC_c = r2MEC(iM2_c);
i_M2r2MEC_3wp = r2MEC(iM2_3wp);
i_M2r2MEC_8wp = r2MEC(iM2_8wp);

e_M3r2MEC_c = r2MEC(eM3_c);
e_M3r2MEC_3wp = r2MEC(eM3_3wp);
e_M3r2MEC_8wp = r2MEC(eM3_8wp);

i_M3r2MEC_c = r2MEC(iM3_c);
i_M3r2MEC_3wp = r2MEC(iM3_3wp);
i_M3r2MEC_8wp = r2MEC(iM3_8wp);


%% establish rule for MEC3 cell cluster
% kmean
% control
r_scale_fac = 0.9*pi; %set a scale for kmean to perform non bias
[idx] = MECcluster_SF(r_scale_fac,e_M3r2MEC_c, e_M3mu2MEC_c);
figure

% below is to assign high R and low R
Rval1 = mean(e_M3r2MEC_c(find(idx == 1)));
Rval2 = mean(e_M3r2MEC_c(find(idx == 2)));
if Rval1 > Rval2
    e_M3highRind_c = find(idx == 1); %this is index for r or mu value matrix, not the actual r/mu value
    e_M3lowRind_c = find(idx == 2);
else
    e_M3highRind_c = find(idx == 2);
    e_M3lowRind_c = find(idx == 1);
end


% 3wp
r_scale_fac = 0.9*pi;
[idx] = MECcluster_SF(r_scale_fac,e_M3r2MEC_3wp, e_M3mu2MEC_3wp);
% below is to assign high R and low R
Rval1 = mean(e_M3r2MEC_3wp(find(idx == 1)));
Rval2 = mean(e_M3r2MEC_3wp(find(idx == 2)));
if Rval1 > Rval2
    e_M3highRind_3wp = find(idx == 1);
    e_M3lowRind_3wp = find(idx == 2);
else
    e_M3highRind_3wp = find(idx == 2);
    e_M3lowRind_3wp = find(idx == 1);
end

% 8wp
r_scale_fac = 0.9*pi*1;
[idx] = MECcluster_SF(r_scale_fac,e_M3r2MEC_8wp, e_M3mu2MEC_8wp);

% below is to assign high R and low R
Rval1 = mean(e_M3r2MEC_8wp(find(idx == 1)));
Rval2 = mean(e_M3r2MEC_8wp(find(idx == 2)));
if Rval1 > Rval2
    e_M3highRind_8wp = find(idx == 1);
    e_M3lowRind_8wp = find(idx == 2);
else
    e_M3highRind_8wp = find(idx == 2);
    e_M3lowRind_8wp = find(idx == 1);
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% asign r to sub clusters
e_M3r2CA1highR_c = e_M3r2CA1_c(e_M3highRind_c);
e_M3r2CA1highR_3wp = e_M3r2CA1_3wp(e_M3highRind_3wp);
e_M3r2CA1highR_8wp = e_M3r2CA1_8wp(e_M3highRind_8wp);
e_M3r2CA1lowR_c = e_M3r2CA1_c(e_M3lowRind_c);
e_M3r2CA1lowR_3wp = e_M3r2CA1_3wp(e_M3lowRind_3wp);
e_M3r2CA1lowR_8wp = e_M3r2CA1_8wp(e_M3lowRind_8wp);

e_M3r2CA1highR_c_ani = animal_ind(eM3_c);
e_M3r2CA1highR_c_ani = e_M3r2CA1highR_c_ani(e_M3highRind_c);
e_M3r2CA1highR_3wp_ani = animal_ind(eM3_3wp);
e_M3r2CA1highR_3wp_ani = e_M3r2CA1highR_3wp_ani(e_M3highRind_3wp);
e_M3r2CA1highR_8wp_ani = animal_ind(eM3_8wp);
e_M3r2CA1highR_8wp_ani = e_M3r2CA1highR_8wp_ani(e_M3highRind_8wp);
e_M3r2CA1lowR_c_ani = animal_ind(eM3_c);
e_M3r2CA1lowR_c_ani = e_M3r2CA1lowR_c_ani(e_M3lowRind_c);
e_M3r2CA1lowR_3wp_ani = animal_ind(eM3_3wp);
e_M3r2CA1lowR_3wp_ani = e_M3r2CA1lowR_3wp_ani(e_M3lowRind_3wp);
e_M3r2CA1lowR_8wp_ani = animal_ind(eM3_8wp);
e_M3r2CA1lowR_8wp_ani = e_M3r2CA1lowR_8wp_ani(e_M3lowRind_8wp);

e_M2r2CA1_c_ani = animal_ind(eM2_c);
e_M2r2CA1_3wp_ani = animal_ind(eM2_3wp);
e_M2r2CA1_8wp_ani = animal_ind(eM2_8wp);

i_M2r2CA1_c_ani = animal_ind(iM2_c);
i_M2r2CA1_3wp_ani = animal_ind(iM2_3wp);
i_M2r2CA1_8wp_ani = animal_ind(iM2_8wp);

e_M3r2CA1_c_ani = animal_ind(eM3_c);
e_M3r2CA1_3wp_ani = animal_ind(eM3_3wp);
e_M3r2CA1_8wp_ani = animal_ind(eM3_8wp);

i_M3r2CA1_c_ani = animal_ind(iM3_c);
i_M3r2CA1_3wp_ani = animal_ind(iM3_3wp);
i_M3r2CA1_8wp_ani = animal_ind(iM3_8wp);
%% asign mu to sub cluster

e_M3mu2CA1highR_c = e_M3mu2CA1_c(e_M3highRind_c);
e_M3mu2CA1highR_3wp = e_M3mu2CA1_3wp(e_M3highRind_3wp);
e_M3mu2CA1highR_8wp = e_M3mu2CA1_8wp(e_M3highRind_8wp);
e_M3mu2CA1lowR_c = e_M3mu2CA1_c(e_M3lowRind_c);
e_M3mu2CA1lowR_3wp = e_M3mu2CA1_3wp(e_M3lowRind_3wp);
e_M3mu2CA1lowR_8wp = e_M3mu2CA1_8wp(e_M3lowRind_8wp);

%%%%% pull pval 
i_M22CA1pval_3wc = pval2CA1(iM2_3wc);
i_M22CA1pval_3wp = pval2CA1(iM2_3wp);
i_M22CA1pval_8wc = pval2CA1(iM2_8wc);
i_M22CA1pval_8wp = pval2CA1(iM2_8wp);
e_M22CA1pval_3wc = pval2CA1(eM2_3wc);
e_M22CA1pval_3wp = pval2CA1(eM2_3wp);
e_M22CA1pval_8wc = pval2CA1(eM2_8wc);
e_M22CA1pval_8wp = pval2CA1(eM2_8wp);
%M3 circr pval to CA1
i_M32CA1pval_3wc = pval2CA1(iM3_3wc);
i_M32CA1pval_3wp = pval2CA1(iM3_3wp);
i_M32CA1pval_8wc = pval2CA1(iM3_8wc);
i_M32CA1pval_8wp = pval2CA1(iM3_8wp);
e_M32CA1pval_3wc = pval2CA1(eM3_3wc);
e_M32CA1pval_3wp = pval2CA1(eM3_3wp);
e_M32CA1pval_8wc = pval2CA1(eM3_8wc);
e_M32CA1pval_8wp = pval2CA1(eM3_8wp);

%combined circ r pval
e_M22CA1pval_c = [e_M22CA1pval_3wc e_M22CA1pval_8wc];
i_M22CA1pval_c = [i_M22CA1pval_3wc i_M22CA1pval_8wc];
e_M32CA1pval_c = [e_M32CA1pval_3wc e_M32CA1pval_8wc];
i_M32CA1pval_c = [i_M32CA1pval_3wc i_M32CA1pval_8wc];

eM32CA1pval_highR_c = e_M32CA1pval_c(e_M3highRind_c);
eM32CA1pval_highR_3wp = e_M32CA1pval_3wp(e_M3highRind_3wp);
eM32CA1pval_highR_8wp = e_M32CA1pval_8wp(e_M3highRind_8wp);
eM32CA1pval_lowR_c = e_M32CA1pval_c(e_M3lowRind_c);
eM32CA1pval_lowR_3wp = e_M32CA1pval_3wp(e_M3lowRind_3wp);
eM32CA1pval_lowR_8wp = e_M32CA1pval_8wp(e_M3lowRind_8wp);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% take out units in mu list that have non-significant r-circ p val (generate new list, don't overwrite)
%control
i_M2mu2CA1_c_clean = i_M2mu2CA1_c(find(i_M22CA1pval_c<0.05));
e_M2mu2CA1_c_clean = e_M2mu2CA1_c(find(e_M22CA1pval_c<0.05));
i_M3mu2CA1_c_clean = i_M3mu2CA1_c(find(i_M32CA1pval_c<0.05));
e_M3mu2CA1_c_clean = e_M3mu2CA1_c(find(e_M32CA1pval_c<0.05));

%3wp
i_M2mu2CA1_3wp_clean = i_M2mu2CA1_3wp(find(i_M22CA1pval_3wp<0.05));
e_M2mu2CA1_3wp_clean = e_M2mu2CA1_3wp(find(e_M22CA1pval_3wp<0.05));
i_M3mu2CA1_3wp_clean = i_M3mu2CA1_3wp(find(i_M32CA1pval_3wp<0.05));
e_M3mu2CA1_3wp_clean = e_M3mu2CA1_3wp(find(e_M32CA1pval_3wp<0.05));

%8wp
i_M2mu2CA1_8wp_clean = i_M2mu2CA1_8wp(find(i_M22CA1pval_8wp<0.05));
e_M2mu2CA1_8wp_clean = e_M2mu2CA1_8wp(find(e_M22CA1pval_8wp<0.05));

i_M3mu2CA1_8wp_clean = i_M3mu2CA1_8wp(find(i_M32CA1pval_8wp<0.05));
e_M3mu2CA1_8wp_clean = e_M3mu2CA1_8wp(find(e_M32CA1pval_8wp<0.05));


% clustered exc units
e_M3mu2CA1_highR_c_clean = e_M3mu2CA1highR_c(find(eM32CA1pval_highR_c<0.05));
e_M3mu2CA1_highR_3wp_clean = e_M3mu2CA1highR_3wp(find(eM32CA1pval_highR_3wp<0.05));
e_M3mu2CA1_highR_8wp_clean = e_M3mu2CA1highR_8wp(find(eM32CA1pval_highR_8wp<0.05));
e_M3mu2CA1_lowR_c_clean = e_M3mu2CA1lowR_c(find(eM32CA1pval_lowR_c<0.05));
e_M3mu2CA1_lowR_3wp_clean = e_M3mu2CA1lowR_3wp(find(eM32CA1pval_lowR_3wp<0.05));
e_M3mu2CA1_lowR_8wp_clean = e_M3mu2CA1lowR_8wp(find(eM32CA1pval_lowR_8wp<0.05));


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%double the points on plot

i_M2mu2CA1_c_clean_double = [rad2deg(i_M2mu2CA1_c_clean)+180 rad2deg(i_M2mu2CA1_c_clean) + 540];
i_M2mu2CA1_3wp_clean_double = [rad2deg(i_M2mu2CA1_3wp_clean)+180 rad2deg(i_M2mu2CA1_3wp_clean) + 540];
i_M2mu2CA1_8wp_clean_double = [rad2deg(i_M2mu2CA1_8wp_clean)+180 rad2deg(i_M2mu2CA1_8wp_clean) + 540];
e_M2mu2CA1_c_clean_double = [rad2deg(e_M2mu2CA1_c_clean)+180 rad2deg(e_M2mu2CA1_c_clean) + 540];
e_M2mu2CA1_3wp_clean_double = [rad2deg(e_M2mu2CA1_3wp_clean)+180 rad2deg(e_M2mu2CA1_3wp_clean) + 540];
e_M2mu2CA1_8wp_clean_double = [rad2deg(e_M2mu2CA1_8wp_clean)+180 rad2deg(e_M2mu2CA1_8wp_clean) + 540];

i_M3mu2CA1_c_clean_double = [rad2deg(i_M3mu2CA1_c_clean)+180 rad2deg(i_M3mu2CA1_c_clean) + 540];
i_M3mu2CA1_3wp_clean_double = [rad2deg(i_M3mu2CA1_3wp_clean)+180 rad2deg(i_M3mu2CA1_3wp_clean) + 540];
i_M3mu2CA1_8wp_clean_double = [rad2deg(i_M3mu2CA1_8wp_clean)+180 rad2deg(i_M3mu2CA1_8wp_clean) + 540];
e_M3mu2CA1_c_clean_double = [rad2deg(e_M3mu2CA1_c_clean)+180 rad2deg(e_M3mu2CA1_c_clean) + 540];
e_M3mu2CA1_3wp_clean_double = [rad2deg(e_M3mu2CA1_3wp_clean)+180 rad2deg(e_M3mu2CA1_3wp_clean) + 540];
e_M3mu2CA1_8wp_clean_double = [rad2deg(e_M3mu2CA1_8wp_clean)+180 rad2deg(e_M3mu2CA1_8wp_clean) + 540];

% high R
e_M3mu2CA1_highR_c_clean_double = [rad2deg(e_M3mu2CA1_highR_c_clean)+180 rad2deg(e_M3mu2CA1_highR_c_clean) + 540];
e_M3mu2CA1_highR_3wp_clean_double = [rad2deg(e_M3mu2CA1_highR_3wp_clean)+180 rad2deg(e_M3mu2CA1_highR_3wp_clean) + 540];
e_M3mu2CA1_highR_8wp_clean_double = [rad2deg(e_M3mu2CA1_highR_8wp_clean)+180 rad2deg(e_M3mu2CA1_highR_8wp_clean) + 540];
% low R
e_M3mu2CA1_lowR_c_clean_double = [rad2deg(e_M3mu2CA1_lowR_c_clean)+180 rad2deg(e_M3mu2CA1_lowR_c_clean) + 540];
e_M3mu2CA1_lowR_3wp_clean_double = [rad2deg(e_M3mu2CA1_lowR_3wp_clean)+180 rad2deg(e_M3mu2CA1_lowR_3wp_clean) + 540];
e_M3mu2CA1_lowR_8wp_clean_double = [rad2deg(e_M3mu2CA1_lowR_8wp_clean)+180 rad2deg(e_M3mu2CA1_lowR_8wp_clean) + 540];

%% pval table making for mu
savepath='L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\';
if exist(savepath)==0
     mkdir(savepath);
end

% eM3 highR 2 CA1
data = {e_M3mu2CA1_highR_c_clean_double, e_M3mu2CA1_highR_3wp_clean_double, e_M3mu2CA1_highR_8wp_clean_double}; %data use for plot
data_mu_stats = {e_M3mu2CA1_highR_c_clean, e_M3mu2CA1_highR_3wp_clean, e_M3mu2CA1_highR_8wp_clean}; %data use for stats
title_name = 'Mu Value of M3 highR exc cells to CA1 theta';
scatterdouble_mu_SF(data, {'Control', '3wp', '8wp'}, {'blue', 'm','red'}, title_name, savepath);


[pval, k, K] = circ_kuipertest(data_mu_stats{1},data_mu_stats{2});
[pval_k, f] = circ_ktest(data_mu_stats{1},data_mu_stats{2});
[pval_w, t] = circ_wwtest(data_mu_stats{1},data_mu_stats{2});
stats_name = 'Mu Value of M3 highR exc cells to CA1 theta (C vs 3wp)';
titlelist_mu(1,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(1,1) = pval;
pvallist_mu(1,2) = pval_k;
pvallist_mu(1,3) = pval_w;

[pval, k, K] = circ_kuipertest(data_mu_stats{1},data_mu_stats{3});
[pval_k, f] = circ_ktest(data_mu_stats{1},data_mu_stats{3});
[pval_w, t] = circ_wwtest(data_mu_stats{1},data_mu_stats{3});
stats_name = 'Mu Value of M3 highR exc cells to CA1 theta (C vs 8wp)';
titlelist_mu(2,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(2,1) = pval;
pvallist_mu(2,2) = pval_k;
pvallist_mu(2,3) = pval_w;

[pval, k, K] = circ_kuipertest(data_mu_stats{2},data_mu_stats{3});
[pval_k, f] = circ_ktest(data_mu_stats{2},data_mu_stats{3});
[pval_w, t] = circ_wwtest(data_mu_stats{2},data_mu_stats{3});
stats_name = 'Mu Value of M3 highR exc cells to CA1 theta (3wp vs 8wp)';
titlelist_mu(3,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(3,1) = pval;
pvallist_mu(3,2) = pval_k;
pvallist_mu(3,3) = pval_w;


% eM3 low R to CA1
data = {e_M3mu2CA1_lowR_c_clean_double, e_M3mu2CA1_lowR_3wp_clean_double, e_M3mu2CA1_lowR_8wp_clean_double}; %data use for plot
data_mu_stats = {e_M3mu2CA1_lowR_c_clean, e_M3mu2CA1_lowR_3wp_clean, e_M3mu2CA1_lowR_8wp_clean}; %data use for stats
title_name = 'Mu Value of M3 low R exc cells to CA1 theta';
scatterdouble_mu_SF(data, {'Control', '3wp', '8wp'}, {'blue', 'm','red'}, title_name, savepath);


[pval, k, K] = circ_kuipertest(data_mu_stats{1},data_mu_stats{2});
[pval_k, f] = circ_ktest(data_mu_stats{1},data_mu_stats{2});
[pval_w, t] = circ_wwtest(data_mu_stats{1},data_mu_stats{2});
stats_name = 'Mu Value of M3 low R exc cells to CA1 theta (C vs 3wp)';
titlelist_mu(4,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(4,1) = pval;
pvallist_mu(4,2) = pval_k;
pvallist_mu(4,3) = pval_w;

[pval, k, K] = circ_kuipertest(data_mu_stats{1},data_mu_stats{3});
[pval_k, f] = circ_ktest(data_mu_stats{1},data_mu_stats{3});
[pval_w, t] = circ_wwtest(data_mu_stats{1},data_mu_stats{3});
stats_name = 'Mu Value of M3 low R exc cells to CA1 theta (C vs 8wp)';
titlelist_mu(5,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(5,1) = pval;
pvallist_mu(5,2) = pval_k;
pvallist_mu(5,3) = pval_w;

[pval, k, K] = circ_kuipertest(data_mu_stats{2},data_mu_stats{3});
[pval_k, f] = circ_ktest(data_mu_stats{2},data_mu_stats{3});
[pval_w, t] = circ_wwtest(data_mu_stats{2},data_mu_stats{3});
stats_name = 'Mu Value of M3 low R exc cells to CA1 theta (3wp vs 8wp)';
titlelist_mu(6,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(6,1) = pval;
pvallist_mu(6,2) = pval_k;
pvallist_mu(6,3) = pval_w;



% M3 to CA1
data = {e_M3mu2CA1_c_clean_double, e_M3mu2CA1_3wp_clean_double, e_M3mu2CA1_8wp_clean_double}; %data use for plot
data_mu_stats = {e_M3mu2CA1_c_clean, e_M3mu2CA1_3wp_clean, e_M3mu2CA1_8wp_clean}; %data use for stats
title_name = 'Mu Value of M3 exc cells to CA1 theta';
%scatterdouble_mu_SF(data, {'Control', '3wp', '8wp'}, {'blue', 'm','red'}, title_name, savepath);

[pval, k, K] = circ_kuipertest(data_mu_stats{1},data_mu_stats{2});
[pval_k, f] = circ_ktest(data_mu_stats{1},data_mu_stats{2});
[pval_w, t] = circ_wwtest(data_mu_stats{1},data_mu_stats{2});
stats_name = 'Mu Value of M3 exc cells to CA1 theta (C vs 3wp)';
titlelist_mu(7,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(7,1) = pval;
pvallist_mu(7,2) = pval_k;
pvallist_mu(7,3) = pval_w;

[pval, k, K] = circ_kuipertest(data_mu_stats{1},data_mu_stats{3});
[pval_k, f] = circ_ktest(data_mu_stats{1},data_mu_stats{3});
[pval_w, t] = circ_wwtest(data_mu_stats{1},data_mu_stats{3});
stats_name = 'Mu Value of M3 exc cells to CA1 theta (C vs 8wp)';
titlelist_mu(8,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(8,1) = pval;
pvallist_mu(8,2) = pval_k;
pvallist_mu(8,3) = pval_w;

[pval, k, K] = circ_kuipertest(data_mu_stats{2},data_mu_stats{3});
[pval_k, f] = circ_ktest(data_mu_stats{2},data_mu_stats{3});
[pval_w, t] = circ_wwtest(data_mu_stats{2},data_mu_stats{3});
stats_name = 'Mu Value of M3 exc cells to CA1 theta (3wp vs 8wp)';
titlelist_mu(9,1) = {convertCharsToStrings(stats_name)};
pvallist_mu(9,1) = pval;
pvallist_mu(9,2) = pval_k;
pvallist_mu(9,3) = pval_w;


mu_pvaltable = table(titlelist_mu, pvallist_mu); %write pval to a table
writetable(mu_pvaltable, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\mu_pvaltable_M32CA1_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 


%% write r csv
savepath='L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\';
if exist(savepath)==0
     mkdir(savepath);
end


% M22CA1_r_exc/inh
table = rval_to_prism(e_M2r2CA1_c_ani, e_M2r2CA1_c);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M2r2CA1_c_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M2r2CA1_3wp_ani, e_M2r2CA1_3wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M2r2CA1_3wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M2r2CA1_8wp_ani, e_M2r2CA1_8wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M2r2CA1_8wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(i_M2r2CA1_c_ani, i_M2r2CA1_c);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\i_M2r2CA1_c_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(i_M2r2CA1_3wp_ani, i_M2r2CA1_3wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\i_M2r2CA1_3wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(i_M2r2CA1_8wp_ani, i_M2r2CA1_8wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\i_M2r2CA1_8wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %M3 %%%%%%%%%%%%%%%%%%%%%%%%%%
% M32CA1_r_exc/inh
table = rval_to_prism(e_M3r2CA1_c_ani, e_M3r2CA1_c);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1_c_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M3r2CA1_3wp_ani, e_M3r2CA1_3wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1_3wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M3r2CA1_8wp_ani, e_M3r2CA1_8wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1_8wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(i_M3r2CA1_c_ani, i_M3r2CA1_c);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\i_M3r2CA1_c_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(i_M3r2CA1_3wp_ani, i_M3r2CA1_3wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\i_M3r2CA1_3wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(i_M3r2CA1_8wp_ani, i_M3r2CA1_8wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\i_M3r2CA1_8wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 


%%%%%%%%%%%%%%%%%%%%%%%%%%
% M32CA1_r_exc/inh - high R
table = rval_to_prism(e_M3r2CA1highR_c_ani, e_M3r2CA1highR_c);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1highR_c_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M3r2CA1highR_3wp_ani, e_M3r2CA1highR_3wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1highR_3wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M3r2CA1highR_8wp_ani, e_M3r2CA1highR_8wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1highR_8wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

% M32CA1_r_exc/inh - low R
table = rval_to_prism(e_M3r2CA1lowR_c_ani, e_M3r2CA1lowR_c);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1lowR_c_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M3r2CA1lowR_3wp_ani, e_M3r2CA1lowR_3wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1lowR_3wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

table = rval_to_prism(e_M3r2CA1lowR_8wp_ani, e_M3r2CA1lowR_8wp);
writetable(table, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\r\M2MOsubsample\e_M3r2CA1lowR_8wp_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

%% write mu csv
savepath='L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\';
if exist(savepath)==0
     mkdir(savepath);
end

% writematrix(i_M2mu2CA1_c_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\i_M2mu2CA1_c_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
% writematrix(i_M2mu2CA1_3wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\i_M2mu2CA1_3wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
% writematrix(i_M2mu2CA1_8wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\i_M2mu2CA1_8wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
% writematrix(e_M2mu2CA1_c_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M2mu2CA1_c_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
% writematrix(e_M2mu2CA1_3wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M2mu2CA1_3wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
% writematrix(e_M2mu2CA1_8wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M2mu2CA1_8wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 

writematrix(i_M3mu2CA1_c_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\i_M3mu2CA1_c_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(i_M3mu2CA1_3wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\i_M3mu2CA1_3wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(i_M3mu2CA1_8wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\i_M3mu2CA1_8wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_c_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_c_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_3wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_3wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_8wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_8wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 


writematrix(e_M3mu2CA1_highR_c_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_highR_c_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_highR_3wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_highR_3wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_highR_8wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_highR_8wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_lowR_c_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_lowR_c_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_lowR_3wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_lowR_3wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
writematrix(e_M3mu2CA1_lowR_8wp_clean_double, 'L:\Susie\SummerEphysHPCEC\AnalysisOutput\HPCEC_analysis\subsample_ana\new_1sec\0.5SD\mu\M2MOsubsample\e_M3mu2CA1_lowR_8wp_clean_double_whenalignM2MO.csv','Delimiter',',') %first col: name; second col: pval for kuipertest/Mann-Whitney test; third col: pval for ktest (for centralization). forth col: Wwtest (for equal means) 
